
devtools::install_github("ByMaxAnjos/LCZ4r")
library(LCZ4r)
library(tidyverse)
library(data.table)
library(ggstar)
library(dplyr)
# Get LCZ map -------------------------------------------------------------

my_map <- terra::rast("/Users/co2map/Documents/CO2CityMap/Berlin/Components/Building/LCZ/lcz_berlin2.tif")
my_map <- raster::raster("/Users/co2map/Documents/CO2CityMap/Berlin/Components/Building/LCZ/lcz_berlin2.tif")

my_map <- lcz_get_map(city="Berlin")

my_map <- lcz_get_map2(my_map, city = "Berlin")

# Plot lcz map ------------------------------------------------------------

lcz_plot_map(my_map)

LCZpar <- lcz_get_parameters(my_map, istack = TRUE)

# Calculate LCZ area ------------------------------------------------------
lcz_cal_area(my_map)



#Plot LCZ parameters
lcz_plot_parameters(LCZpar, iselect = "SVF2", subtitle = "Berlin")

lcz_plot_parameters(LCZpar, iselect = c("ADM3", "ALB3"))

veg1<- lcz_plot_parameters(my_par, iselect = c("VEG1"))
veg2<- lcz_plot_parameters(my_par, iselect = c("VEG2"))
veg3<- lcz_plot_parameters(my_par, iselect = c("VEG3"))
imp1<- lcz_plot_parameters(my_par, iselect = c("IMP1"))
imp2<- lcz_plot_parameters(my_par, iselect = c("IMP2"))
imp3<- lcz_plot_parameters(my_par, iselect = c("IMP3"))

fig <- cowplot::plot_grid(veg1, veg2, veg3, imp1, imp2, imp3, labels = "AUTO")
ggplot2::ggsave("test_par.jpeg", fig, scale = 2)


# Time series -------------------------------------------------------------

air_UCON <- fread("/Users/co2map/Documents/CO2CityMap/Berlin/Components/building/inputs/data/airT_UCON_2015_2022.csv") %>%
  #rename(longitude = Longitude, latitude = Latitude) %>%
  openair::selectByDate(year=2019:2020) %>%
  filter(station %in% c("bamberger", "albrecht", "spandauer", "dessauer", "potsdam", "kaniswall", "brandenburg"))

data("lcz_data")


lcz_ts(my_map, data_frame = lcz_data,
               var = "airT", station_id = "station",
       time.freq = "hour", year = 2019, month= 11)

lcz_anomaly(my_map, data_frame = lcz_data,
       var = "airT", station_id = "station",
       time.freq = "hour", year = 2019, month= 9:12, by="month",
       ylab = "Anomalias de temperatura do ar [ºC]",
       xlab = "Estações meteorológicas",
       title = "LCZ Berlim anomalias - 2019")

rm(lcz_anomaly)


# Prepare data -----------------------------------------------------------
library(sf)
tmap_mode("view")
airT_south <- st_read("/Users/co2map/Documents/Aracaju_LCZ/Stations/Loc_Stations_ARACLIMA.shp")
qtm(airT_south)

rm(test, test_id)
dados <- fread("/Users/co2map/Documents/CO2CityMap/Berlin/Components/aracaju_dados.csv") %>%
  select(Date, Time, CEN, JAR, PAR, ZON, JOS, INMET) %>%
  rename(date= Date, time=Time) %>%
  mutate_if(is.character, is.numeric)
dados_id <-fread("/Users/co2map/Documents/CO2CityMap/Berlin/Components/table_ara_id.csv")

dados %>% glimpse()

data_frame = dados

process_datetime <- function(data_frame) {
  if ("date" %in% names(data_frame)) {
    if ("time" %in% names(data_frame)) {
      if (!(inherits(data_frame$date, "POSIXct") || inherits(data_frame$date, "Date"))) {
        data_frame$date <- as.POSIXct(paste(data_frame$date, data_frame$time), format = "%d-%m-%Y %H:%M:%S", tz = "UTC")
        data_frame$time <- NULL
      }
    } else {
      base::suppressWarnings("Column 'time' not found in the data frame.\n")
    }
    if (!(inherits(data_frame$date, "POSIXct") || inherits(data_frame$date, "Date"))) {
      base::cat("Failed to convert 'date' to POSIXct. Please check the format.\n")
    }
  } else {
    base::cat("Column 'date' not found in the data frame.\n")
  }

  return(data_frame)
}

df_processed <- process_datetime(air_UCON)

df_processed <- process_datetime(dados)

process_id <- function() {

  if (!"latitude" %in% names(df_processed)) {
    df_processed %>%
      mutate_if(is.character, is.numeric)
      pivot_longer(!date, names_to = "station", values_to = "var_interp")
  }
  else {


  }

  return()
}


